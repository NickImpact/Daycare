buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'com.qixalite.spongestart' version '1.6.2'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'maven'
}

apply plugin: 'net.minecraftforge.gradle.forge'
version '2.2.2'

group 'com.nickimpact.daycare'

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "snapshot_20171007"
    useDepAts = true
    makeObfSourceJar = false
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'net.minecraftforge.gradle.forge'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    minecraft {
        version = "1.12.2-14.23.5.2768"
        runDir = "run"
        mappings = "snapshot_20171007"
        useDepAts = true
        makeObfSourceJar = false
    }

    ext {
        pluginversion = '2.3.1'
        spongeapiversion = '7.3.0'
        reforged = "Reforged-8.1.2-S${spongeapiversion}-${pluginversion}"
        generations = "Generations-8.0.0-S${spongeapiversion}-${pluginversion}"
    }

    repositories {
        mavenCentral()
        maven { url = 'https://jitpack.io' }
        ivy {
            url "https://download.nodecdn.net/containers"
            layout "pattern", {
                artifact "/[organisation]/[module]/release/[revision]/[ext]"
            }
        }
        maven { url = "https://repo.aikar.co/content/groups/aikar/" }
        maven {
            name = "Impact-Dev"
            url = "https://maven.impactdev.net/repository/development/"
        }
    }

    dependencies {
        shadow fileTree(dir: '../../Pixelmon Mixins/build/libs', include: 'Pixelmon Mixins-1.0.0-universal.jar')
        shadow "net.impactdev.impactor:api:3.0.0-SNAPSHOT"
        shadow 'net.impactdev:pixelmonbridge:1.0.0-SNAPSHOT'
        shadow "org.projectlombok:lombok:1.18.4"
        shadow 'com.google.guava:guava:27.1-jre'
        shadow 'com.google.code.gson:gson:2.8.5'
        compile group: 'org.mariuszgromada.math', name: 'MathParser.org-mXparser', version: '4.0.0'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    processResources {
        // this will ensure that this task is redone when the versions change.
        inputs.property "version", project.version
        inputs.property "mcversion", project.minecraft.version

        // replace stuff in mcmod.info, nothing else
        from(sourceSets.main.resources.srcDirs) {
            include 'mcmod.info'

            // replace version and mcversion
            expand 'version':project.version, 'mcversion':project.minecraft.version
        }

        // copy everything else, thats not the mcmod.info
        from(sourceSets.main.resources.srcDirs) {
            exclude 'mcmod.info'
        }
    }
}

task copyJars(type: Copy) {
    dependsOn subprojects.build
    from subprojects.collect { it.tasks.withType(Jar) }
    into "$buildDir/allJars"
    exclude '*-all.jar'
    exclude '*-sources.jar'
    exclude 'api*.jar'
    exclude 'common*.jar'
    exclude 'spigot*.jar'
    exclude 'sponge*.jar'
    exclude 'plugin*.jar'
    exclude 'reforged*.jar'
    exclude 'generations.jar'
}

build.dependsOn shadowJar
build.dependsOn copyJars